
<style>


.statistics {
    display: flex;
    justify-content: space-around;
    padding: 50px 0;
    background-color: #f7f7f7;
    flex-wrap: wrap; /* Allow the items to wrap on smaller screens */
}

.stat {
    text-align: center;
    font-size: 24px;
    color: #333;
    margin: 20px; /* Adds spacing around each stat */
}

.counter {
    font-size: 48px;
    font-weight: bold;
    color: #0b5887; /* Gold color */
}

/* Media Query for Tablets */
@media (max-width: 768px) {
    .statistics {
        flex-direction: column;
        align-items: center;
    }
    
    .stat {
        font-size: 20px;
    }

    .counter {
        font-size: 40px;
    }
}

/* Media Query for Mobile Phones */
@media (max-width: 480px) {
    .statistics {
        padding: 30px 0;
    }

    .stat {
        font-size: 18px;
        margin: 10px 0;
    }

    .counter {
        font-size: 36px;
    }
}

</style>

 <h3 style="text-align: center;">HOW DID WE GET THERE</h3>

<!-- Number Section -->
<section class="statistics">
    <div class="stat">
        <span class="counter" data-target="70">0</span>+
        <p>Publications</p>
    </div>
    <div class="stat">
        <span class="counter" data-target="40">0</span>+
        <p>Fact Finding Missions</p>
    </div>
    <div class="stat">
        <span class="counter" data-target="20">0</span>+
        <p>Legal Support</p>
    </div>
    <div class="stat">
        <span class="counter" data-target="67">0</span>+
        <p>Policy Advocacy</p>
    </div>
    <div class="stat">
        <span class="counter" data-target="356">0</span>+
        <p>Dalit Human Right Defenders</p>
    </div>
</section>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const counters = document.querySelectorAll('.counter');
        const speed = 1000; // Adjust this value to make the counting faster/slower

        const animateCounters = () => {
            counters.forEach(counter => {
                const updateCount = () => {
                    const target = +counter.getAttribute('data-target');
                    const count = +counter.innerText;

                    const increment = target / speed;

                    if (count < target) {
                        counter.innerText = Math.ceil(count + increment);
                        setTimeout(updateCount, 100); // You can adjust the delay for smoother counting
                    } else {
                        counter.innerText = target;
                    }
                };

                updateCount();
            });
        };

        // Scroll event listener
        const isInViewport = (element) => {
            const rect = element.getBoundingClientRect();
            return (
                rect.top >= 0 &&
                rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                rect.right <= (window.innerWidth || document.documentElement.clientWidth)
            );
        };

        window.addEventListener('scroll', () => {
            if (isInViewport(document.querySelector('.statistics'))) {
                animateCounters();
            }
        });
    });
</script>
